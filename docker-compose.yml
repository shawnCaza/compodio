services:

  # Image downloader service
  image-init:
    image: alpine:latest
    volumes:
      - ./sample-data/images:/images
    command: >
      sh -c "
        mkdir -p /images &&
        if [ ! -f /images/.initialized ]; then
          echo 'Downloading sample images...' &&
          wget -O /tmp/sample_images.tar.gz https://images.compodio.com/sample_show_images.tar.gz &&
          mkdir /images/shows &&
          tar -xzf /tmp/sample_images.tar.gz -C /images/shows &&
          rm /tmp/sample_images.tar.gz &&
          touch /images/.initialized &&
          echo 'Images downloaded and extracted successfully.'
        else
          echo 'Images already initialized, skipping download.'
        fi
      "

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./sample-data/images:/app/public/images
    depends_on:
      - api
      - image-init
    environment:
      - NEXT_PUBLIC_API_URI=http://localhost:8000
      - NEXT_PUBLIC_feed_URI=http://localhost:8000/feed
      - NEXT_PUBLIC_image_server_URI=http://localhost:3000/images

  # PHP API
  api:
    build:
      context: ./api
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www/html
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_DOCKER_PORT}
      - DB_NAME=${DB_NAME}

  # MySQL Database
  db:
    image: mysql:8.0
    ports:
      - "${DB_LOCAL_PORT}:${DB_DOCKER_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_TCP_PORT=${DB_DOCKER_PORT}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}

  # Python Scraper
  scraper:
    build:
      context: ./scraper
    volumes:
      - ./scraper:/app
      - ./sample-data/images:/app/images
      - ./db:/app/db
      - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}:ro,z
    depends_on:
      - db
    environment:
      - IMAGE_PATH=/app/images
      - DB_EXPORT_PATH=/app/db
      - DEV_MODE=true
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_DOCKER_PORT}


volumes:
  mysql_data:
  # image_data: